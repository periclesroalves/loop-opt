#!/usr/bin/python3

## Reads the alias trace generated by an instrumented program run line by line
# and accumulates the alias and noalias counts for each loop and pair of variables.

import collections
import re
import sys


class TraceReader:
	## iterator that parses the trace file
	# each call to next() returns one alias pair data

	LINE_REGEX = re.compile("^LOOP '([\w.-:]+)' - '([\w.-]+)' vs '([\w.-]+)' - ([\w.-]+)$")

	def __init__(self, file):
		self.file = file
		self.line = 0

	def __iter__(self):
		return self

	def __next__(self):
		self.line += 1
		line = self.file.readline()

		if line:
			match = TraceReader.LINE_REGEX.match(line)

			if not match:
				raise Exception('Malformed entry on line ' + str(self.line))

			groups = match.groups()

			if not groups or len(groups) != 4:
				raise Exception('Malformed entry on line ' + str(self.line))

			loop, ptr1, ptr2, alias = match.groups()

			if alias == 'ALIAS':
				alias = True
			elif alias == 'NOALIAS':
				alias = False
			else:
				raise Exception('Malformed entry on line ' + str(self.line))

			return (loop, ptr1, ptr2, alias)
		else:
			raise StopIteration


class Counter:
	def __init__(self, ptrs):
		self.ptrs    = ptrs
		self.alias   = 0
		self.noalias = 0

alias_pair = collections.namedtuple('AliasPair', 'ptr1 ptr2')

## get input file

if len(sys.argv) > 1:
	alias_trace_file = open(sys.argv[1], "r")
else:
	alias_trace_file = sys.stdin

#alias_trace

## parse & aggregate data

data = {}

for loop_name, ptr1, ptr2, alias in TraceReader(alias_trace_file):
	loop = data.setdefault(loop_name, {})
	pair = alias_pair(*sorted((ptr1, ptr2)))

	if pair not in loop:
		loop[pair] = Counter(pair)

	counter = loop[pair]

	if alias:
		counter.alias   += 1
	else:
		counter.noalias += 1

## print out yaml

def _print(*args):
	print(sep="", *args)

for loop, counters in data.items():
	_print('- loop: "', loop, '"')
	_print('  alias_pairs:')

	for pair, counter in counters.items():
		print(4*' ', '- ptr1:',    pair.ptr1)
		print(4*' ', '  ptr2:',    pair.ptr2)
		print(4*' ', '  alias:',   counter.alias)
		print(4*' ', '  noalias:', counter.noalias)
