; ModuleID = '/Users/periclesalves/ufmg-research/tests/bad-alias.c'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.8.0"

@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define void @foo(i32* noalias %A, i32* noalias %B, i32 %n) #0 {
entry:
  br label %entry.split

entry.split:                                      ; preds = %entry
  %cmp5 = icmp sgt i32 %n, 0
  br i1 %cmp5, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry.split
  %0 = zext i32 %n to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvar = phi i64 [ 0, %for.body.lr.ph ], [ %indvar.next, %for.body ]
  %i.06 = trunc i64 %indvar to i32
  %1 = add i64 %indvar, 5
  %add = trunc i64 %1 to i32
  %arrayidx2 = getelementptr i32* %A, i64 %indvar
  %arrayidx4 = getelementptr i32* %B, i64 %indvar
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32* %A, i64 %idxprom
  store i32 %i.06, i32* %arrayidx, align 4
  %2 = load i32* %arrayidx2, align 4
  store i32 %2, i32* %arrayidx4, align 4
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp ne i64 %indvar.next, %0
  br i1 %exitcond, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.body
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry.split
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @main() #0 {
entry:
  %A = alloca [100 x i32], align 16
  %B = alloca [100 x i32], align 16
  br label %entry.split

entry.split:                                      ; preds = %entry
  %arraydecay = getelementptr inbounds [100 x i32]* %A, i64 0, i64 0
  %arraydecay1 = getelementptr inbounds [100 x i32]* %B, i64 0, i64 0
  call void @foo(i32* %arraydecay, i32* %arraydecay1, i32 100)
  %arrayidx = getelementptr inbounds [100 x i32]* %B, i64 0, i64 5
  %0 = load i32* %arrayidx, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str, i64 0, i64 0), i32 %0) #2
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.6.0 (trunk 217066) (llvm/trunk 217065)"}
