# -*- Python -*-

import os
import platform

import lit.formats
import lit.util

# Configuration file for the 'lit' test runner.

# name: The name of this test suite.
config.name = 'LNT'

# testFormat: The test format to use to interpret tests.
execute_external = platform.system() != 'Windows'
config.test_format = lit.formats.ShTest(execute_external)

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.py']

# excludes: A list of individual files to exclude.
config.excludes = ['__init__.py', 'Inputs', 'SharedInputs']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = config.test_source_root

config.target_triple = None

src_root = os.path.join(config.test_source_root, '..')
config.environment['PYTHONPATH'] = src_root

config.substitutions.append(('%src_root', src_root))
config.substitutions.append(('%{src_root}', src_root))
config.substitutions.append(('%{shared_inputs}', os.path.join(
            src_root, 'tests', 'SharedInputs')))

if lit_config.params.get('long', None):
    config.available_features.add('long')

if lit_config.params.get('postgres', None):
    config.available_features.add('postgres')

config.available_features.add(platform.system())

# Enable coverage.py reporting, assuming the coverage module has been installed
# and sitecustomize.py in the virtualenv has been modified appropriately.
if lit_config.params.get('check-coverage', None):
    config.environment['COVERAGE_PROCESS_START'] = os.path.join(
        os.path.dirname(__file__), ".coveragerc")
    
